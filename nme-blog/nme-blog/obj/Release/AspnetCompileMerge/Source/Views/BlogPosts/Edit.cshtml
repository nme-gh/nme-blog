@model nme_blog.Models.BlogPost

@{
    ViewBag.Title = "Blog | Edit Post";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "BlogPosts", FormMethod.Post, new { enctype = "Multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>BlogPost</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.Slug)
        @Html.HiddenFor(model => model.mediaURL)
        
        @*  (Hidden) Id,Created,Slug,mediaURL,       (Unhidden) Title,Body,Published  : Binded fields either hidden or unhidden(on the form actually)
            Updated is neither hidden nor unhidden because I don't need to bind it in anyway as I have to modify it everytime the Post Request happens!
        *@

        @*// NME: What happens to Slug value if [Title] value is edited/modified? 
            Should we try to modify Slug as well, similar way creating the Slug first time at the BlogPost creation?*@
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.mediaURL, new { htmlAttributes = new { @class = "form-control" } })*@
                <input name="image" type="file" class="form-control" />
                @Html.ValidationMessageFor(model => model.mediaURL, "", new { @class = "text-danger" })<span>@Model.mediaURL</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Published)
                    @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Admin", "BlogAdmin") |
    @Html.ActionLink("Back Home", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script type="text/javascript">
                $(function () {
                    tinymce.init({
                        selector: '#Body'
                    });
                });
    </script>
}
