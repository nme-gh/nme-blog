@model nme_blog.Models.BlogPost

@{
    ViewBag.Title = "Blog | Post";
}

<!---start-banner---->
<div class="banner">
    <div class="container">
        <div class="banner-head">
            <h1>Words from Me</h1>
            <h2>Check out My Blog</h2>
        </div>
    </div>
</div>
<!---//End-banner---->
<div class="content">
    <div class="container">
        <div class="content-grids">
            <div class="col-md-8 content-main">
                <div class="content-grid">
                    <div class="content-grid-head">
                        <h3>POST OF THE DAY</h3>
                        <h4>@Html.DisplayFor(model => model.Created)</h4>
                        <div class="clearfix"></div>
                    </div>
                    <div class="content-grid-single">
                        <h3>@Html.DisplayFor(model => model.Title)</h3>
                        @*<span>@Html.DisplayFor(model => model.Slug)</span>*@
                        <hr/><hr/>
                        <div class="row">
                            @if (Model.mediaURL != null)
                            {
                                <div class="col-md-4">
                                    <img class="img-responsive" src="@Model.mediaURL" alt="">
                                    @*<img class="img-responsive" src="@Url.Content(Model.mediaURL)" alt="">*@
                                </div>
                            }
                        </div>
                        <p>
                            @Html.Raw(Model.Body)
                        </p>

                        @if (!User.Identity.IsAuthenticated)
                        {
                            <p>
                                You must be @Html.ActionLink(linkText: "logged in", actionName: "Login", controllerName: "Account", routeValues: new { returnUrl = ViewBag.ReturnUrl }, htmlAttributes: new { @style = "font-weight:bold; font-style: italic" }) to leave a comment.
                                <br/>
                                Never signed up before? @Html.ActionLink(linkText: "Register here.", actionName: "Register", controllerName: "Account", routeValues: new { returnUrl = ViewBag.ReturnUrl }, htmlAttributes: new { @style = "font-weight:bold; font-style: italic" }) 
                            </p>
                        } else
                        {
                        <div class="content-form">
                            <h3>Leave a comment</h3>

                            @using (Html.BeginForm("Create", "Comments", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("PostId", Model.Id)

                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group">
                                        <div class="col-md-10">
                                            <textarea placeholder="Message" name="Body"></textarea>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div>   @*<class="col-md-offset-2 col-md-10">*@
                                        <input type="submit" value="Add Comment" class="bttn" />  @*class="btn btn-default"*@
                                    </div>
                                </div>
                            }
                        </div>
                        }
                        <div class="clearfix"></div>
                        @if (Model.Comments.Count > 0)
                        {
                        <div class="comments">
                            <h3>Comments</h3>
                            @foreach (var comment in Model.Comments.Reverse())
                            {
                                <div class="comment-grid">
                                    @*<img src="~/images/pic.png" alt="" />*@
                                    <div class="comment-info">
                                        <h4>@Html.DisplayFor(modelItem => comment.Author.UserName)</h4>
                                        <p>@Html.DisplayFor(modelItem => comment.Body)</p>
                                        <h5>On @Html.DisplayFor(modelItem => comment.Created)</h5>
                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
                                            {
                                                <div class="btn-toolbar">
                                                    @Html.ActionLink(linkText: "Edit", actionName: "Edit", controllerName: "Comments", routeValues: new { id = comment.Id }, htmlAttributes: new { @class = "bttn" })
                                                    @Html.ActionLink(linkText: "Delete", actionName: "Delete", controllerName: "Comments", routeValues: new { id = comment.Id }, htmlAttributes: new { @class = "bttn" })
                                                </div>
                                            }
                                            @*else if (User.Identity.Name.Equals(comment.Author.UserName))
                                            {
                                                // We can enable the Edit button for the logged-in user but it still wouldn't allow it as we have [Authorize(Roles = "Admin, Moderator")] restriction for the Controller's Action unless the user is in either of these roles!
                                                // So, removing this part as it's not an additional feature or functionality.
                                                @Html.ActionLink(linkText: "Edit", actionName: "Edit", controllerName: "Comments", routeValues: new { id = comment.Id }, htmlAttributes: new { @class = "bttn" })
                                            }*@
                                        }
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                            }
                        </div>
                        }
                    </div>

                </div>
            </div>

            <div class="col-md-4 content-main-right">
                <div class="search">
                    <h3>SEARCH HERE</h3>
                    @using (Html.BeginForm("Index", "BlogPosts", FormMethod.Post, new { @class = "form" }))
                    {
                        <div class="form-control-static">
                            <input id="searchStr" name="searchStr" type="text" placeholder="...->">
                            <input type="submit" value="">
                        </div>
                    }
                </div>
                @*<div class="categories">
                    <h3>CATEGORIES</h3>
                    <li class="active"><a href="#">Donec quis dui at dolor tempor</a></li>
                    <li><a href="#">Vestibulum commodo felis quis tort</a></li>
                    <li><a href="#">Fusce pellentesque suscipit</a></li>
                </div>*@
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>
@section Scripts{
<script type="text/javascript">
    $(document).ready(function() {
		/*
		var defaults = {
		containerID: 'toTop', // fading element id
		containerHoverID: 'toTopHover', // fading element hover id
		scrollSpeed: 1200,
		easingType: 'linear'
		};
		*/
		$().UItoTop({ easingType: 'easeOutQuart' });
    });
</script>
<a href="#to-top" id="toTop" style="display: block;"> <span id="toTopHover" style="opacity: 1;"> </span></a>
}
